[project]
name = "blog-api"
version = "1.0.0"
description = "RESTful API for a blogging platform using Django and DRF"
authors = [{ name = "Renan Penna", email = "renan.penna.tech@gmail.com" }]
license = { text = "MIT" }
readme = "README.md"
keywords = ["Challenge", "Blog", "DRF", "Django", "API"]
classifiers = ["Development Status :: 4 - Beta", "Programming Language :: Python :: 3.12"]

[project.urls]
homepage = "https://github.com/xarpy/blog-api"

[tool.black]
line-length = 120
target-version = ['py312']
exclude = '''
/(
    \.git
  | \.mypy_cache
  | \.pytest_cache
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 120
multi_line_output = 3
include_trailing_comma = true
use_parentheses = true
ensure_newline_before_comments = true
skip = [".git", "__pycache__"]
extend_skip = ["README.md", "*.json"]

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "core.settings"
python_files = ["test_*.py", "*_test.py", "tests/*.py"]
testpaths = ["tests"]
addopts = "--pdbcls=IPython.terminal.debugger:TerminalPdb --reuse-db"
log_cli = true
log_level = "INFO"

[tool.mypy]
exclude = ["tests"]
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = false
strict_equality = true
ignore_missing_imports = true
implicit_reexport = false

[tool.interrogate]
ignore-init-method = true
ignore-init-module = false
ignore-magic = false
ignore-semiprivate = false
ignore-private = false
ignore-property-decorators = false
ignore-module = true
ignore-nested-functions = false
ignore-nested-classes = true
ignore-setters = false
fail-under = 80
exclude = ["tests"]
ignore-regex = ["^get$", "^mock_.*", ".*BaseClass.*"]
verbose = 1
color = true
generate-badge = "."
badge-format = "svg"

[tool.coverage.run]
branch = true
source = ["posts", "core"]
omit = ["*/tests/*", "*/migrations/*"]

[tool.coverage.report]
show_missing = true
fail_under = 80
exclude_lines = [
    "pragma: no cover",
    "def __str__",
    "if __name__ == .__main__.:",
]

[tool.coverage.html]
directory = "htmlcov"
title = "Blog API Test Coverage Report"